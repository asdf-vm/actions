name: Main workflow

on:
  - pull_request
  - push

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Retrieve yarn cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: v1-${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            v1-${{ runner.os }}-yarn-

      - name: Install npm packages
        run: yarn --frozen-lockfile

      - name: Check formatting
        run: yarn fmt:check

      - name: Check lint
        run: yarn lint

      - name: Check type
        run: yarn typecheck

      - name: Ensure out directories are up-to-date
        if: runner.os == 'Linux'
        shell: bash
        run: |
          yarn build
          if [ "$(git status --porcelain | wc -l)" -gt "0" ]; then
            echo "Detected uncommitted changes after build. See status below:"
            git diff
            exit 1
          fi

  asdf_is_installed:
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: setup asdf
        uses: ./setup

      - name: asdf is available
        run: |
          echo ASDF_DIR=$ASDF_DIR
          echo ASDF_DATA_DIR=$ASDF_DATA_DIR
          echo PATH=$PATH
          asdf --version

  plugin_is_tested:
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - uses: ./plugin-test
        with:
          command: direnv --version
          plugin: direnv
          giturl: https://github.com/asdf-community/asdf-direnv.git
          gitref: master

  plugins_are_installed:
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - uses: ./plugins-add
        with:
          tool_versions: |
            # tools won't be installed by this action, only plugins
            elixir foo
            nodejs bar

      - run: |
          asdf plugin list --urls --refs | grep elixir
          asdf plugin list --urls --refs | grep nodejs

  installing-plugins-already-installed-are-skiped:
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - uses: ./setup

      - name: Add an asdf plugin
        run: |
          asdf plugin-add clusterctl https://github.com/pfnet-research/asdf-clusterctl.git

      - uses: ./plugins-add
        with:
          tool_versions: |
            # tools won't be installed by this action, only plugins
            elixir foo
            nodejs bar
            # plugins already installed are here
            clusterctl tako

      - run: |
          asdf plugin list --urls --refs | grep elixir
          asdf plugin list --urls --refs | grep nodejs
          asdf plugin list --urls --refs | grep clusterctl

  tools_are_installed:
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: setup asdf
        uses: ./install
        with:
          before_install: echo asdf nodejs import-keyring
          tool_versions: direnv 2.32.1

      - run: direnv version
